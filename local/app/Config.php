<?phpnamespace App;use Illuminate\Database\Eloquent\Model;class Config extends Model{    protected $fillable = [        'name', 'content', 'user_id', 'created_at', 'updated_at'    ];    public function users()    {        return $this->belongsTo('App\User', 'user_id');    }    public function getAllConfig()    {        return $this->pluck('content', 'name');    }    public function getConfigByName($name){        return $this->where('name',$name)->first();    }    public function updateConfig($key, $val)    {        if ($setting = self::getAllSettings()->where('name', $key)->first()) {            return $setting->update([                'name' => $key,                'content' => $val]) ? $val : false;        }    }    public function getConfigByListName($array)    {        return $this->whereIn('name', $array)->get();    }    public function prepareParameters($parameters)    {        if ($parameters->input('favor-image-config')) {            $parameters['favor-image-config'] = substr($parameters['favor-image-config'], strpos($parameters['favor-image-config'], 'images'), strlen($parameters['favor-image-config']) - 1);        } else {            $parameters->request->add(['favor-image-config' => null]);        }        if ($parameters->input('contact-image-config')) {            $parameters['contact-image-config'] = substr($parameters['contact-image-config'], strpos($parameters['contact-image-config'], 'images'), strlen($parameters['contact-image-config']) - 1);        } else {            $parameters->request->add(['contact-image-config' => null]);        }        if ($parameters->input('logo-config')) {            $parameters['logo-config'] = substr($parameters['logo-config'], strpos($parameters['logo-config'], 'images'), strlen($parameters['logo-config']) - 1);        } else {            $parameters->request->add(['logo-config' => null]);        }        if($parameters->input('website_update')){            $parameters->request->add(['website-update' => 1]);        }else{            $parameters->request->add(['website-update' => 0]);        }        if ($parameters->input('image-choose')) {            $listImage = $parameters->input('image-choose');            $subImage = '';            if (count($listImage) != 0) {                foreach ($listImage as $key => $item) {                    if (hasHttpOrHttps($item))                        $subImage = $subImage . substr($item, strpos($item, 'images'), strlen($item) - 1) . ';';                    else {                        $subImage = $subImage . $item . ';';                    }                }                $parameters->request->add(['slider-config' => substr($subImage, 0, -1)]);            }        } else {            $parameters->request->add(['slider-config' => null]);        }        return $parameters;    }    public static function getAllSettings()    {        return self::all();    }}